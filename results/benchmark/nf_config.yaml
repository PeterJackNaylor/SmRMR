config_path: results/benchmark/nf_config.yaml
out: results/benchmark
repeat: 2
simulation_np: [[100, 100], [100, 500]] #, [100, 5000]] #, [500, 100], [500, 500], [500, 5000], [1000, 5000]]
validation_samples: [[100, 100], [100, 500]]
test_samples: [[10000, 100], [10000, 500]]
simulation_models:
- linear_00
# - linear_0
# - linear_1
# - linear_2
# - categorical_0
# - categorical_1
# - categorical_2
# - nonlinear_1
# - nonlinear_2
# - nonlinear_3
penalty: [scad, mcp, l1, None]
kernel: [gaussian, linear]
measure_stat: [HSIC, PC]
smrmr:
  - name: smrmr
    parameters:
      alpha: 0.3
      n1: 0.5
      lambda: [1e-5, 1e1]
feature_selection:
  - name: hsic_lasso
    parameters:
      num_features: [5, 10, 15, 20, 25, 30]
  - name: mrmr
    parameters:
      criteria: [MIQ, MID]
      num_features: [5, 10, 15, 20, 25, 30]
prediction:
  # - name: gbdt
  #   prediction: classification
  #   parameters:
  #     num_leaves: [ 20, 40, 60, 80, 100 ]
  #     alphas: [ 0.001, 0.01, 0.1 ]
  #     lambdas: [ 0.001, 0.01, 0.1 ]
  # - name: knn
  #   prediction: classification
  #   parameters:
  #     n_neighbors: [ 3, 5, 7 ]
  # - name: logistic_regression
  #   prediction: classification
  #   parameters:
  #     penalty: [ l1, none ]
  #     C: [ 0.01, 0.1, 0.2, 0.5 ]
  - name: random_forest
    prediction: classification
    parameters:
      n_estimators: [ 200, 500 ]
      max_features: [ auto, log2 ]
      max_depth: [ 4, 6, 8 ]
      criterion: [ gini, entropy ]
  # - name: svc
  #   prediction: classification
  #   parameters:
  #     C: [ 0.5, 1, 2 ]
  # - name: lars
  #   prediction: regression
  #   parameters:
  #     n_nonzero_coefs: [5, 10, 15, 20]
  - name: lasso
    prediction: regression
    parameters:
      alpha: [ 0.5, 1, 2 ]
performance_metrics:
  - name: acc
    mode: classification
  - name: tpr_fpr
    mode: classification
  - name: features_tpr_fpr
    mode: both
  - name: tpr_fpr
    mode: classification
  - name: mse
    mode: regression
